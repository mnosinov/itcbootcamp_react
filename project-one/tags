	Session.vim	/^nnoremap  :Rg$/;"	m
	Session.vim	/^nnoremap  :Ag$/;"	m
		Session.vim	/^inoremap <expr> 	 pumvisible() ? "\\" : "\\	"$/;"	m
	Session.vim	/^nnoremap   za$/;"	m
	Session.vim	/^nnoremap  $/;"	m
	Session.vim	/^nnoremap  $/;"	m
	Session.vim	/^nnoremap $/;"	m
	Session.vim	/^nnoremap <silent>  :CtrlP$/;"	m
	Session.vim	/^imap  :wa$/;"	m
	Session.vim	/^nmap  :wa$/;"	m
<	Session.vim	/^lnoremap <buffer> < –ë$/;"	m
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
"	Session.vim	/^lnoremap <buffer> " –≠$/;"	m
#	Session.vim	/^lnoremap <buffer> # ‚Ññ$/;"	m
$	Session.vim	/^lnoremap <buffer> $ ;$/;"	m
%	Session.vim	/^nmap <silent> % <Plug>(MatchitNormalForward)$/;"	m
%	Session.vim	/^omap <silent> % <Plug>(MatchitOperationForward)$/;"	m
&	Session.vim	/^lnoremap <buffer> & ?$/;"	m
'	Session.vim	/^lnoremap <buffer> ' —ç$/;"	m
,	Session.vim	/^lnoremap <buffer> , –±$/;"	m
,,	Session.vim	/^nmap <silent> ,, <Plug>(emmet-expand-abbr)$/;"	m
,/	Session.vim	/^nmap <silent> ,\/ <Plug>(emmet-toggle-comment)$/;"	m
,;	Session.vim	/^nmap <silent> ,; <Plug>(emmet-expand-word)$/;"	m
,A	Session.vim	/^nmap <silent> ,A <Plug>(emmet-anchorize-summary)$/;"	m
,D	Session.vim	/^nmap <silent> ,D <Plug>(emmet-balance-tag-outword)$/;"	m
,I	Session.vim	/^nmap <silent> ,I <Plug>(emmet-image-encode)$/;"	m
,N	Session.vim	/^nmap <silent> ,N <Plug>(emmet-move-prev)$/;"	m
,a	Session.vim	/^nmap <silent> ,a <Plug>(emmet-anchorize-url)$/;"	m
,d	Session.vim	/^nmap <silent> ,d <Plug>(emmet-balance-tag-inward)$/;"	m
,i	Session.vim	/^nmap <silent> ,i <Plug>(emmet-image-size)$/;"	m
,j	Session.vim	/^nmap <silent> ,j <Plug>(emmet-split-join-tag)$/;"	m
,k	Session.vim	/^nmap <silent> ,k <Plug>(emmet-remove-tag)$/;"	m
,m	Session.vim	/^nmap <silent> ,m <Plug>(emmet-merge-lines)$/;"	m
,n	Session.vim	/^nmap <silent> ,n <Plug>(emmet-move-next)$/;"	m
,u	Session.vim	/^nmap <silent> ,u <Plug>(emmet-update-tag)$/;"	m
.	Session.vim	/^lnoremap <buffer> . —é$/;"	m
/	Session.vim	/^lnoremap <buffer> \/ .$/;"	m
040|	Session.vim	/^normal! 040|$/;"	m
:	Session.vim	/^lnoremap <buffer> : –ñ$/;"	m
;	Session.vim	/^lnoremap <buffer> ; –∂$/;"	m
<C-G>	Session.vim	/^nnoremap <C-G> :Rg$/;"	m
<C-H>	Session.vim	/^nnoremap <C-H> :Ag$/;"	m
<C-J>	Session.vim	/^nnoremap <C-J> <NL>$/;"	m
<C-K>	Session.vim	/^nnoremap <C-K> $/;"	m
<C-L>	Session.vim	/^nnoremap <C-L> $/;"	m
<C-P>	Session.vim	/^nnoremap <silent> <C-P> :CtrlP$/;"	m
<C-S>	Session.vim	/^imap <C-S> :wa$/;"	m
<C-S>	Session.vim	/^nmap <C-S> :wa$/;"	m
<Down>	Session.vim	/^inoremap <expr> <Down> pumvisible() ? "\\" : "\\<Down>"$/;"	m
<F10>	Session.vim	/^inoremap <F10>  :bnext$/;"	m
<F10>	Session.vim	/^nnoremap <F10> :bnext$/;"	m
<F11>	Session.vim	/^inoremap <F11>  :b #$/;"	m
<F11>	Session.vim	/^nnoremap <F11> :b #$/;"	m
<F12>	Session.vim	/^inoremap <F12>  :NERDTreeToggle$/;"	m
<F12>	Session.vim	/^nnoremap <F12> :NERDTreeToggle$/;"	m
<F2>	Session.vim	/^inoremap <F2>  :CtrlPMRU$/;"	m
<F2>	Session.vim	/^nnoremap <F2> :CtrlPMRU$/;"	m
<F3>	Session.vim	/^inoremap <F3>  :CtrlPBuffer$/;"	m
<F3>	Session.vim	/^nnoremap <F3> :CtrlPBuffer$/;"	m
<F5>	Session.vim	/^nnoremap <F5> :so $VIMRUNTIME\/syntax\/hitest.vim$/;"	m
<F8>	Session.vim	/^imap <F8>  :TagbarToggle$/;"	m
<F8>	Session.vim	/^nmap <F8> :TagbarToggle$/;"	m
<F9>	Session.vim	/^inoremap <F9>  :bprevious$/;"	m
<F9>	Session.vim	/^nnoremap <F9> :bprevious$/;"	m
<NL>	Session.vim	/^nnoremap <NL> <NL>$/;"	m
<Nul>	Session.vim	/^imap <Nul> <C-Space>$/;"	m
<Plug>(MatchitNormalBackward)	Session.vim	/^nnoremap <silent> <Plug>(MatchitNormalBackward) :call matchit#Match_wrapper('',0,'n')$/;"	m
<Plug>(MatchitNormalForward)	Session.vim	/^nnoremap <silent> <Plug>(MatchitNormalForward) :call matchit#Match_wrapper('',1,'n')$/;"	m
<Plug>(MatchitNormalMultiBackward)	Session.vim	/^nnoremap <silent> <Plug>(MatchitNormalMultiBackward) :call matchit#MultiMatch("bW", "n")$/;"	m
<Plug>(MatchitNormalMultiForward)	Session.vim	/^nnoremap <silent> <Plug>(MatchitNormalMultiForward) :call matchit#MultiMatch("W",  "n")$/;"	m
<Plug>(MatchitOperationBackward)	Session.vim	/^onoremap <silent> <Plug>(MatchitOperationBackward) :call matchit#Match_wrapper('',0,'o')$/;"	m
<Plug>(MatchitOperationForward)	Session.vim	/^onoremap <silent> <Plug>(MatchitOperationForward) :call matchit#Match_wrapper('',1,'o')$/;"	m
<Plug>(MatchitOperationMultiBackward)	Session.vim	/^onoremap <silent> <Plug>(MatchitOperationMultiBackward) :call matchit#MultiMatch("bW", "o")$/;"	m
<Plug>(MatchitOperationMultiForward)	Session.vim	/^onoremap <silent> <Plug>(MatchitOperationMultiForward) :call matchit#MultiMatch("W",  "o")$/;"	m
<Plug>(Prettier)	Session.vim	/^nnoremap <silent> <Plug>(Prettier) :Prettier$/;"	m
<Plug>(PrettierAsync)	Session.vim	/^nnoremap <silent> <Plug>(PrettierAsync) :PrettierAsync$/;"	m
<Plug>(PrettierCli)	Session.vim	/^nnoremap <silent> <Plug>(PrettierCli) :PrettierCli$/;"	m
<Plug>(PrettierCliPath)	Session.vim	/^nnoremap <silent> <Plug>(PrettierCliPath) :PrettierCliPath$/;"	m
<Plug>(PrettierCliVersion)	Session.vim	/^nnoremap <silent> <Plug>(PrettierCliVersion) :PrettierCliVersion$/;"	m
<Plug>(PrettierFragment)	Session.vim	/^nnoremap <silent> <Plug>(PrettierFragment) :PrettierFragment$/;"	m
<Plug>(PrettierPartial)	Session.vim	/^nnoremap <silent> <Plug>(PrettierPartial) :PrettierPartial$/;"	m
<Plug>(PrettierVersion)	Session.vim	/^nnoremap <silent> <Plug>(PrettierVersion) :PrettierVersion$/;"	m
<Plug>(YCMFindSymbolInDocument)	Session.vim	/^nnoremap <silent> <Plug>(YCMFindSymbolInDocument) :call youcompleteme#finder#FindSymbol( 'document' )$/;"	m
<Plug>(YCMFindSymbolInWorkspace)	Session.vim	/^nnoremap <silent> <Plug>(YCMFindSymbolInWorkspace) :call youcompleteme#finder#FindSymbol( 'workspace' )$/;"	m
<Plug>(emmet-anchorize-summary)	Session.vim	/^nnoremap <Plug>(emmet-anchorize-summary) :call emmet#anchorizeURL(1)$/;"	m
<Plug>(emmet-anchorize-url)	Session.vim	/^nnoremap <Plug>(emmet-anchorize-url) :call emmet#anchorizeURL(0)$/;"	m
<Plug>(emmet-balance-tag-inward)	Session.vim	/^nnoremap <Plug>(emmet-balance-tag-inward) :call emmet#balanceTag(1)$/;"	m
<Plug>(emmet-balance-tag-outword)	Session.vim	/^nnoremap <Plug>(emmet-balance-tag-outword) :call emmet#balanceTag(-1)$/;"	m
<Plug>(emmet-expand-abbr)	Session.vim	/^nnoremap <Plug>(emmet-expand-abbr) :call emmet#expandAbbr(3,"")$/;"	m
<Plug>(emmet-expand-word)	Session.vim	/^nnoremap <Plug>(emmet-expand-word) :call emmet#expandAbbr(1,"")$/;"	m
<Plug>(emmet-image-encode)	Session.vim	/^nnoremap <Plug>(emmet-image-encode) :call emmet#imageEncode()$/;"	m
<Plug>(emmet-image-size)	Session.vim	/^nnoremap <Plug>(emmet-image-size) :call emmet#imageSize()$/;"	m
<Plug>(emmet-merge-lines)	Session.vim	/^nnoremap <Plug>(emmet-merge-lines) :call emmet#mergeLines()$/;"	m
<Plug>(emmet-move-next)	Session.vim	/^nnoremap <Plug>(emmet-move-next) :call emmet#moveNextPrev(0)$/;"	m
<Plug>(emmet-move-next-item)	Session.vim	/^nnoremap <Plug>(emmet-move-next-item) :call emmet#moveNextPrevItem(0)$/;"	m
<Plug>(emmet-move-prev)	Session.vim	/^nnoremap <Plug>(emmet-move-prev) :call emmet#moveNextPrev(1)$/;"	m
<Plug>(emmet-move-prev-item)	Session.vim	/^nnoremap <Plug>(emmet-move-prev-item) :call emmet#moveNextPrevItem(1)$/;"	m
<Plug>(emmet-remove-tag)	Session.vim	/^nnoremap <Plug>(emmet-remove-tag) :call emmet#removeTag()$/;"	m
<Plug>(emmet-split-join-tag)	Session.vim	/^nnoremap <Plug>(emmet-split-join-tag) :call emmet#splitJoinTag()$/;"	m
<Plug>(emmet-toggle-comment)	Session.vim	/^nnoremap <Plug>(emmet-toggle-comment) :call emmet#toggleComment()$/;"	m
<Plug>(emmet-update-tag)	Session.vim	/^nnoremap <Plug>(emmet-update-tag) :call emmet#updateTag()$/;"	m
<Plug>(fzf-complete-buffer-line)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<Plug>(fzf-complete-file)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-file) fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print | sed 's:^..::'")$/;"	m
<Plug>(fzf-complete-file-ag)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-file-ag) fzf#vim#complete#path('ag -l -g ""')$/;"	m
<Plug>(fzf-complete-line)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-line) fzf#vim#complete#line()$/;"	m
<Plug>(fzf-complete-path)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-path) fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -print | sed '1d;s:^..::'")$/;"	m
<Plug>(fzf-complete-word)	Session.vim	/^inoremap <expr> <Plug>(fzf-complete-word) fzf#vim#complete#word()$/;"	m
<Plug>(fzf-insert)	Session.vim	/^nnoremap <silent> <Plug>(fzf-insert) i$/;"	m
<Plug>(fzf-maps-i)	Session.vim	/^inoremap <silent> <Plug>(fzf-maps-i) :call fzf#vim#maps('i', 0)$/;"	m
<Plug>(fzf-maps-n)	Session.vim	/^nnoremap <silent> <Plug>(fzf-maps-n) :call fzf#vim#maps('n', 0)$/;"	m
<Plug>(fzf-maps-o)	Session.vim	/^onoremap <silent> <Plug>(fzf-maps-o) :call fzf#vim#maps('o', 0)$/;"	m
<Plug>(fzf-normal)	Session.vim	/^nnoremap <silent> <Plug>(fzf-normal) <Nop>$/;"	m
<Plug>NetrwBrowseX	Session.vim	/^nnoremap <silent> <Plug>NetrwBrowseX :call netrw#BrowseX(netrw#GX(),netrw#CheckIfRemote(netrw#GX()))$/;"	m
<S-Tab>	Session.vim	/^inoremap <expr> <S-Tab> pumvisible() ? "\\" : "\\<S-Tab>"$/;"	m
<Up>	Session.vim	/^inoremap <expr> <Up> pumvisible() ? "\\" : "\\<Up>"$/;"	m
>	Session.vim	/^lnoremap <buffer> > –Æ$/;"	m
?	Session.vim	/^lnoremap <buffer> ? ,$/;"	m
@	Session.vim	/^lnoremap <buffer> @ "$/;"	m
A	Session.vim	/^lnoremap <buffer> A –§$/;"	m
App	src/App.js	/^function App() {$/;"	f
B	Session.vim	/^lnoremap <buffer> B –ò$/;"	m
C	Session.vim	/^lnoremap <buffer> C –°$/;"	m
D	Session.vim	/^lnoremap <buffer> D –í$/;"	m
E	Session.vim	/^lnoremap <buffer> E –£$/;"	m
F	Session.vim	/^lnoremap <buffer> F –ê$/;"	m
G	Session.vim	/^lnoremap <buffer> G –ü$/;"	m
H	Session.vim	/^lnoremap <buffer> H –†$/;"	m
I	Session.vim	/^lnoremap <buffer> I –®$/;"	m
J	Session.vim	/^lnoremap <buffer> J –û$/;"	m
K	Session.vim	/^lnoremap <buffer> K –õ$/;"	m
L	Session.vim	/^lnoremap <buffer> L –î$/;"	m
M	Session.vim	/^lnoremap <buffer> M –¨$/;"	m
N	Session.vim	/^lnoremap <buffer> N –¢$/;"	m
O	Session.vim	/^lnoremap <buffer> O –©$/;"	m
P	Session.vim	/^lnoremap <buffer> P –ó$/;"	m
Q	Session.vim	/^lnoremap <buffer> Q –ô$/;"	m
R	Session.vim	/^lnoremap <buffer> R –ö$/;"	m
S	Session.vim	/^lnoremap <buffer> S –´$/;"	m
SessionLoad	Session.vim	/^let SessionLoad = 1$/;"	v
T	Session.vim	/^lnoremap <buffer> T –ï$/;"	m
U	Session.vim	/^lnoremap <buffer> U –ì$/;"	m
V	Session.vim	/^lnoremap <buffer> V –ú$/;"	m
W	Session.vim	/^lnoremap <buffer> W –¶$/;"	m
X	Session.vim	/^lnoremap <buffer> X –ß$/;"	m
Y	Session.vim	/^lnoremap <buffer> Y –ù$/;"	m
Z	Session.vim	/^lnoremap <buffer> Z –Ø$/;"	m
[	Session.vim	/^lnoremap <buffer> [ —Ö$/;"	m
[%	Session.vim	/^nmap <silent> [% <Plug>(MatchitNormalMultiBackward)$/;"	m
[%	Session.vim	/^omap <silent> [% <Plug>(MatchitOperationMultiBackward)$/;"	m
\d	Session.vim	/^nnoremap \\d :YcmShowDetailedDiagnostic$/;"	m
\g	Session.vim	/^map \\g :YcmCompleter GoToDefinitionElseDeclaration$/;"	m
\p	Session.vim	/^nmap \\p <Plug>(Prettier)$/;"	m
]	Session.vim	/^lnoremap <buffer> ] —ä$/;"	m
]%	Session.vim	/^nmap <silent> ]% <Plug>(MatchitNormalMultiForward)$/;"	m
]%	Session.vim	/^omap <silent> ]% <Plug>(MatchitOperationMultiForward)$/;"	m
^	Session.vim	/^lnoremap <buffer> ^ :$/;"	m
`	Session.vim	/^lnoremap <buffer> ` —ë$/;"	m
a	Session.vim	/^lnoremap <buffer> a —Ñ$/;"	m
b	Session.vim	/^lnoremap <buffer> b –∏$/;"	m
c	Session.vim	/^lnoremap <buffer> c —Å$/;"	m
d	Session.vim	/^lnoremap <buffer> d –≤$/;"	m
e	Session.vim	/^lnoremap <buffer> e —É$/;"	m
f	Session.vim	/^lnoremap <buffer> f –∞$/;"	m
g	Session.vim	/^lnoremap <buffer> g –ø$/;"	m
g%	Session.vim	/^nmap <silent> g% <Plug>(MatchitNormalBackward)$/;"	m
g%	Session.vim	/^omap <silent> g% <Plug>(MatchitOperationBackward)$/;"	m
gx	Session.vim	/^nmap gx <Plug>NetrwBrowseX$/;"	m
h	Session.vim	/^lnoremap <buffer> h —Ä$/;"	m
i	Session.vim	/^lnoremap <buffer> i —à$/;"	m
j	Session.vim	/^lnoremap <buffer> j –æ$/;"	m
k	Session.vim	/^lnoremap <buffer> k –ª$/;"	m
l	Session.vim	/^lnoremap <buffer> l –¥$/;"	m
ls	Session.vim	/^cnoremap ls ls$/;"	m
m	Session.vim	/^lnoremap <buffer> m —å$/;"	m
n	Session.vim	/^lnoremap <buffer> n —Ç$/;"	m
o	Session.vim	/^lnoremap <buffer> o —â$/;"	m
p	Session.vim	/^lnoremap <buffer> p –∑$/;"	m
q	Session.vim	/^lnoremap <buffer> q –π$/;"	m
r	Session.vim	/^lnoremap <buffer> r –∫$/;"	m
s	Session.vim	/^lnoremap <buffer> s —ã$/;"	m
s:cpo_save	Session.vim	/^let s:cpo_save=&cpo$/;"	v
s:l	Session.vim	/^let s:l = 13 - ((12 * winheight(0) + 23) \/ 47)$/;"	v
s:so_save	Session.vim	/^let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1$/;"	v
s:sx	Session.vim	/^let s:sx = expand("<sfile>:p:r")."x.vim"$/;"	v
s:wipebuf	Session.vim	/^  let s:wipebuf = bufnr('%')$/;"	v
t	Session.vim	/^lnoremap <buffer> t –µ$/;"	m
u	Session.vim	/^lnoremap <buffer> u –≥$/;"	m
v	Session.vim	/^lnoremap <buffer> v –º$/;"	m
w	Session.vim	/^lnoremap <buffer> w —Ü$/;"	m
x	Session.vim	/^lnoremap <buffer> x —á$/;"	m
y	Session.vim	/^lnoremap <buffer> y –Ω$/;"	m
z	Session.vim	/^lnoremap <buffer> z —è$/;"	m
zo	Session.vim	/^normal! zo$/;"	m
zt	Session.vim	/^normal! zt$/;"	m
{	Session.vim	/^lnoremap <buffer> { –•$/;"	m
}	Session.vim	/^lnoremap <buffer> } –™$/;"	m
~	Session.vim	/^lnoremap <buffer> ~ –Å$/;"	m
